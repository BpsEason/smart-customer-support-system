version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443" # For HTTPS if configured
    volumes:
      - ./laravel-backend:/var/www/html:ro # 只讀掛載 Laravel 應用代碼
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php-fpm
      - fastapi-ai
    networks:
      - app-network

  php-fpm:
    build:
      context: ./laravel-backend
      dockerfile: Dockerfile
    volumes:
      - ./laravel-backend:/var/www/html # 讀寫掛載 Laravel 應用代碼
    environment:
      # Laravel 環境變數，與 .env 檔案對應
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:-your_root_password} # 使用環變數或預設密碼
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BROADCAST_DRIVER: reverb # 設置為 reverb
      REVERB_HOST: reverb
      REVERB_PORT: 8080
      REVERB_SCHEME: http
      QUEUE_CONNECTION: redis
      FASTAPI_AI_SERVICE_URL: http://fastapi-ai:8001
    depends_on:
      - mysql
      - redis
      - reverb # 依賴 Reverb 服務
    networks:
      - app-network

  fastapi-ai:
    build:
      context: ./fastapi-ai-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./fastapi-ai-service:/app # 掛載 FastAPI 應用代碼
      - models_data:/app/models_data # 持久化 AI 模型
      - knowledge_data:/app/knowledge_data # 持久化知識庫數據
    environment:
      # FastAPI 環境變數，從 .env 讀取
      FASTAPI_HOST: 0.0.0.0
      FASTAPI_PORT: 8001
      # 如果需要，可以在這裡添加 AI 服務的 API Keys (例如 OPENAI_API_KEY)
      # OPENAI_API_KEY: ${OPENAI_API_KEY}
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-your_root_password} # 使用環變數或預設密碼
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-your_root_password}
    volumes:
      - mysql_data:/var/lib/mysql # 持久化 MySQL 數據
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data # 持久化 Redis 數據
    networks:
      - app-network

  reverb:
    image: laravel/reverb:latest # 使用 Laravel Reverb 官方鏡像
    ports:
      - "8080:8080" # WebSocket 端口
      - "9000:9000" # HTTPS 端口 (如果啟用)
    volumes:
      - ./laravel-backend:/app # 掛載 Laravel 應用以讀取 .env 和 config
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_KEY: ${APP_KEY} # 從 Laravel .env 獲取
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost}
      LARAVEL_WEBSOCKETS_PORT: 8080
      LARAVEL_WEBSOCKETS_HOST: 0.0.0.0
      # Reverb 特定配置，根據 .env 配置
      REVERB_APP_ID: ${REVERB_APP_ID:-your_reverb_app_id}
      REVERB_APP_KEY: ${REVERB_APP_KEY:-your_reverb_app_key}
      REVERB_APP_SECRET: ${REVERB_APP_SECRET:-your_reverb_app_secret}
      REVERB_POLLING_INTERVAL_MS: 2000
    networks:
      - app-network
    depends_on:
      - php-fpm # Reverb 需要 Laravel 應用配置

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  models_data:
  knowledge_data:
