version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./laravel-backend:/var/www/html # 掛載 Laravel 專案以供 Nginx 服務靜態文件和 PHP-FPM
    depends_on:
      - php-fpm
      - fastapi-ai
    networks:
      - app-network

  php-fpm:
    build:
      context: ./laravel-backend
      dockerfile: Dockerfile
    volumes:
      - ./laravel-backend:/var/www/html
    environment:
      # Laravel 應用配置
      APP_ENV=local
      APP_DEBUG=true
      APP_KEY= # 這將在容器啟動後生成
      APP_URL=http://localhost
      LOG_CHANNEL=stderr
      DB_CONNECTION=mysql
      DB_HOST=mysql
      DB_PORT=3306
      DB_DATABASE=laravel_db
      DB_USERNAME=laravel_user
      DB_PASSWORD=laravel_password # 確保與 MySQL 服務的 MYSQL_PASSWORD 一致
      REDIS_HOST=redis
      REDIS_PORT=6379
      QUEUE_CONNECTION=redis
      # Reverb 配置
      REVERB_APP_ID=123456 # 替換為您的 Reverb APP ID
      REVERB_APP_KEY=some_reverb_key # 替換為您的 Reverb APP KEY
      REVERB_APP_SECRET=some_reverb_secret # 替換為您的 Reverb APP SECRET
      REVERB_HOST=reverb # 指向 reverb 服務的容器名稱
      REVERB_PORT=8080
      REVERB_SCHEME=http # 使用 http 或 https
      # AI 服務 URL
      FASTAPI_AI_SERVICE_URL=http://fastapi-ai:8001
      # 可選：AI 服務 API 金鑰
      AI_SERVICE_API_KEY=your_ai_service_api_key_here # 替換為您的金鑰
    depends_on:
      - mysql
      - redis
      - reverb # 依賴 Reverb 服務
      - fastapi-ai # 依賴 FastAPI AI 服務
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD=root_password # MySQL root 用戶密碼
      MYSQL_DATABASE=laravel_db
      MYSQL_USER=laravel_user
      MYSQL_PASSWORD=laravel_password # 確保與 php-fpm 服務的 DB_PASSWORD 一致
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql # 持久化數據
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_DATA_DIR}:/data # 持久化數據
    networks:
      - app-network

  reverb:
    image: laravel/reverb:latest # 使用 Laravel Reverb 官方 Docker 映像
    environment:
      REVERB_APP_ID=123456
      REVERB_APP_KEY=some_reverb_key
      REVERB_APP_SECRET=some_reverb_secret
      REVERB_HOST=0.0.0.0
      REVERB_PORT=8080
      REVERB_SCHEME=http
      REVERB_DEBUG_MODE=true
    ports:
      - "8080:8080"
    networks:
      - app-network

  fastapi-ai:
    build:
      context: ./fastapi-ai-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ${MODELS_DATA_DIR}:/app/models # 持久化 AI 模型文件
      - ${KNOWLEDGE_DATA_DIR}:/app/data # 持久化知識庫數據
    environment:
      # FastAPI 應用配置
      PYTHONUNBUFFERED=1
      MODEL_DIR=/app/models
      DATA_DIR=/app/data
      # 可選：OpenAI API 金鑰 (如果使用 OpenAI)
      OPENAI_API_KEY=your_openai_api_key_here
      # AI 服務金鑰 (用於 Laravel 調用 FastAPI)
      AI_SERVICE_API_KEY=your_ai_service_api_key_here # 替換為您的金鑰
    networks:
      - app-network

  mailpit: # 輕量級 SMTP 伺服器，用於開發環境捕獲和測試郵件
    image: docker.io/axllent/mailpit:latest
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  models_data:
  knowledge_data:
